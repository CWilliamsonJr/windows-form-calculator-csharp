<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>